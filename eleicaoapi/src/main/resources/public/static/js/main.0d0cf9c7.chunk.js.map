{"version":3,"sources":["shared/components/ContentPage/ContentPage.tsx","shared/components/Loading/Loading.tsx","pages/cadastros/eleicao/Eleicoes.tsx","pages/cadastros/cargo/Cargo.tsx","pages/cadastros/eleicao/Eleicao.tsx","pages/cadastros/candidato/Candidatos.tsx","pages/cadastros/candidato/Candidato.tsx","pages/votar/IniciarVotacao.tsx","pages/cadastros/cargo/Cargos.tsx","pages/votar/SelecionarEleicao.tsx","pages/relatorios/Relatorios.tsx","pages/relatorios/Relatorio.tsx","App.tsx","index.tsx"],"names":["Header","Layout","Content","ContentPage","props","style","padding","alignContent","backgroundColor","marginLeft","fontSize","fontWeight","title","overflow","justify","align","xl","span","offset","flex","children","Loading","display","justifyContent","size","Eleicoes","useState","eleicoes","setEleicoes","history","useHistory","loading","setLoading","configuracaoColunas","dataIndex","key","render","text","item","onClick","push","id","v","moment","format","onConfirm","remover","icon","QuestionCircleOutlined","color","DeleteOutlined","getEleicoes","axios","get","then","data","console","log","catch","error","useEffect","message","content","delete","success","duration","marginBottom","type","PlusOutlined","length","columns","dataSource","description","formItemLayout","labelCol","wrapperCol","Cargo","nome","setNome","feedbackSucesso","setFeedbackSucesso","Form","useForm","form","useParams","novo","setFieldsValue","getCargo","status","extra","onFinish","post","getFieldValue","put","Item","name","label","rules","required","goBack","htmlType","Eleicao","cargos","setCargos","dataFim","dataInicio","map","c","getEleicao","cargosSubmit","forEach","disabledDate","current","isBefore","subtract","isAfter","Group","value","lineHeight","Candidatos","candidatos","setCandidatos","UserOutlined","src","foto","str","cargo","getCandidatos","Option","Select","Candidato","fotoId","setFotoId","loadingFoto","setLoadingFoto","getCandidato","uploadButton","LoadingOutlined","className","showSearch","placeholder","optionFilterProp","filterOption","input","option","toLowerCase","indexOf","listType","showUploadList","action","beforeUpload","file","isJpgOrPng","isLt2M","onChange","info","response","alt","width","IniciarVotacao","textAlign","cpf","destroy","trigger","validateTrigger","validator","rule","replace","Promise","reject","resolve","mask","Cargos","getCargos","Text","Typography","SelecionarEleicao","Title","eleicaoSelecionada","setEleicaoSelecionada","candidatoSelecionado","setCandidatoSelecionado","protocolo","setProtocolo","subTitle","direction","border","borderRadius","itemLayout","renderItem","candidato","cargoId","candidatoId","CheckOutlined","eleicaoId","eleicao","votados","grid","gutter","column","e","minHeight","numero","ev","Relatorios","Situacao","BotaoRelatorio","situacao","Relatorio","votacao","setVotacao","setSituacao","qtdEleitores","setQtdEleitores","quantidadeEleitores","agruparPeloCargo","listaVotos","Object","values","votos","marginTop","cargoNome","showHeader","pagination","Sider","Footer","SubMenu","Menu","App","locale","height","position","left","theme","mode","defaultSelectedKeys","to","from","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d0cf9c7.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport {Col, Layout, Row} from \"antd\";\nconst {Header, Content} = Layout;\n\ntype ContentPageProps = {\n    title: string,\n}\n\nexport const ContentPage: FunctionComponent<ContentPageProps> = (props) => <aside>\n    <Header style={{padding: '10px 20px', alignContent: 'center', backgroundColor: 'transparent'}}>\n        <div style={{ marginLeft: 20, fontSize: 20, fontWeight: 'bold' }}>\n            { props.title }\n        </div>\n    </Header>\n    <Content style={{padding: 30, overflow: 'initial'}}>\n        <Row justify={\"center\"} align=\"middle\">\n        <Col xl={{ span: 14, offset: 2 }} flex={1} >\n            {props.children}\n        </Col>\n        </Row>\n    </Content>\n</aside>\n","import React, {FunctionComponent} from 'react';\nimport {Layout, Spin} from \"antd\";\n\ntype LoadingProps = {}\n\nexport const Loading: FunctionComponent<LoadingProps> = (props) =>\n    <aside>\n        <div style={{display: \"flex\", justifyContent: \"center\", padding: 50}}>\n            <Spin size=\"large\"/>\n        </div>\n    </aside>\n","import React, {useEffect, useState} from 'react';\nimport moment from 'moment';\nimport {Button, Empty, message, Popconfirm, Table} from 'antd';\nimport {PlusOutlined, QuestionCircleOutlined, DeleteOutlined} from '@ant-design/icons';\nimport {useHistory} from \"react-router-dom\";\nimport {ContentPage} from \"../../../shared/components/ContentPage/ContentPage\";\nimport axios from \"axios\";\nimport {Loading} from \"../../../shared/components/Loading/Loading\";\n\nconst Eleicoes: React.FC = () => {\n\n    const [eleicoes, setEleicoes] = useState<any[]>([]);\n    const history = useHistory();\n    const [loading, setLoading] = useState<boolean>(true);\n\n    const configuracaoColunas = [\n        {\n            title: 'Nome',\n            dataIndex: 'nome',\n            key: 'nome',\n            render: (text: any, item: any) => <a onClick={() => history.push(\"/eleicao/\" + item.id) }>{text}</a>,\n        },\n        {\n            title: 'Dada de Início',\n            dataIndex: 'dataInicio',\n            key: 'dataInicio',\n            render: (v: any) => moment(v).format('DD/MM/YYYY')\n        },\n        {\n            title: 'Data de término',\n            dataIndex: 'dataFim',\n            key: 'dataFim',\n            render: (v: any) => moment(v).format('DD/MM/YYYY')\n        },\n        {\n            key: 'remove',\n            render: (text: string, item: any) => <Popconfirm onConfirm={() => remover(item.id)} title=\"Confirma a remoção？\" icon={<QuestionCircleOutlined style={{color: 'red'}}/>}>\n                <DeleteOutlined style={{color: 'red'}}/>\n            </Popconfirm>\n        },\n    ];\n\n    const getEleicoes = () => {\n        axios.get('/eleicoes')\n            .then(function ({data}) {\n                console.log(data);\n                setEleicoes(data);\n                setLoading(false);\n            })\n            .catch(function (error) {\n                console.log(error);\n                setLoading(false);\n            });\n    }\n\n    useEffect(() => {\n        getEleicoes();\n    }, []);\n\n    const remover = (id: string) => {\n        message.loading({content: 'Aguarde...', key: 'msg'});\n        axios.delete('/eleicoes/' + id)\n            .then(function ({data}) {\n                message.success({content: 'Removido!', key: 'msg', duration: 2});\n                getEleicoes();\n            })\n            .catch(function (error) {\n                message.error({content: 'Falha ao remover!', key: 'msg', duration: 2});\n            });\n    }\n\n    return (\n        <>\n            {loading ? <Loading/> :\n                <ContentPage title={'Eleições'}>\n                    <Button style={{marginBottom: 20}} type=\"primary\" icon={<PlusOutlined/>}\n                            onClick={() => history.push(\"/eleicao/novo\")}>\n                        Nova eleição\n                    </Button>\n                    {eleicoes.length ?\n                        <Table columns={configuracaoColunas} dataSource={eleicoes}/>\n                        :\n                        <Empty description={'Nenhuma eleição cadastrada'}/>\n                    }\n                </ContentPage>\n            }\n        </>\n    );\n}\nexport default Eleicoes;\n","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {Button, Form, Input, message, Result} from 'antd';\nimport {ContentPage} from \"../../../shared/components/ContentPage/ContentPage\";\nimport {Loading} from \"../../../shared/components/Loading/Loading\";\n\nconst formItemLayout = {\n    labelCol: {span: 4},\n    wrapperCol: {span: 6},\n};\n\nconst Cargo: React.FC = () => {\n\n    const [nome, setNome] = useState<string>('');\n    const [feedbackSucesso, setFeedbackSucesso] = useState<boolean>(false);\n    const [form] = Form.useForm();\n    const [loading, setLoading] = useState<boolean>(true);\n\n    const history = useHistory();\n    const {id} = useParams();\n    const novo = id === 'novo';\n\n    const getCargo = (id: string) => {\n        axios.get('/cargos/' + id)\n            .then(function ({data}) {\n                form.setFieldsValue({\n                    nome: data.nome,\n                })\n                setNome(data.nome);\n                setLoading(false);\n            })\n            .catch(function (error) {\n                console.log(error);\n                setLoading(false);\n            });\n    }\n\n    useEffect(() => {\n        if (!novo) {\n            getCargo(id);\n        } else {\n            setLoading(false);\n        }\n    }, []);\n\n    const onSubmit = () => {\n        if (novo) {\n            axios.post('/cargos/criar', {\n                nome: form.getFieldValue('nome'),\n            })\n                .then(function ({data}) {\n                    if (data.id) {\n                        setFeedbackSucesso(true);\n                    }\n                })\n                .catch(function (error) {\n                    message.error({content: 'Falha ao criar!', key: 'msg', duration: 2});\n                });\n        } else {\n            message.loading({content: 'Aguarde...', key: 'msg'});\n            axios.put('/cargos/editar', {\n                id,\n                nome: form.getFieldValue('nome'),\n            })\n                .then(function ({data}) {\n                    if (data.id) {\n                        message.success({content: 'Alterado!', key: 'msg', duration: 2});\n                        setNome(form.getFieldValue('nome'));\n                    }\n                })\n                .catch(function (error) {\n                    message.error({content: 'Falha ao alterar!', key: 'msg', duration: 2});\n                });\n        }\n    }\n\n    const reset = () => {\n        setFeedbackSucesso(false);\n        form.setFieldsValue({\n            nome: '',\n        })\n        setNome('');\n    }\n\n    return (\n        <>\n            {loading ? <Loading/> :\n                <ContentPage title={novo ? 'Novo Cargo' : nome}>\n                    {feedbackSucesso ?\n                        <Result\n                            status=\"success\"\n                            title=\"Cargo criado com sucesso!\"\n                            extra={[\n                                <Button type=\"primary\" key=\"console\" onClick={() => history.push(\"/cargos\")}>\n                                    Cargos\n                                </Button>,\n                                <Button key=\"buy\" onClick={reset}>Criar novo Cargo</Button>,\n                            ]}\n                        />\n                        :\n                        <Form form={form} {...formItemLayout} onFinish={onSubmit}>\n                            <Form.Item name='nome' label=\"Nome\"\n                                       rules={[{required: true, message: 'Campo obrigatório!'}]}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item wrapperCol={{offset: 4, span: 16}}>\n                                <Button type=\"ghost\" onClick={() => history.goBack()}>\n                                    Cancelar\n                                </Button>\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    {novo ? 'Criar' : 'Alterar'}\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    }\n                </ContentPage>\n            }\n        </>\n    );\n}\nexport default Cargo;\n","import React, {useEffect, useState} from 'react';\nimport moment from 'moment';\nimport axios from 'axios';\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {Button, DatePicker, Form, Input, message, Result, Checkbox, Row, Col, Select} from 'antd';\nimport {ContentPage} from \"../../../shared/components/ContentPage/ContentPage\";\nimport {Loading} from \"../../../shared/components/Loading/Loading\";\n\nconst formItemLayout = {\n    labelCol: {span: 4},\n    wrapperCol: {span: 6},\n};\n\nconst Eleicao: React.FC = (props) => {\n\n    const [nome, setNome] = useState<string>('');\n    const [cargos, setCargos] = useState<any[]>([]);\n    const [feedbackSucesso, setFeedbackSucesso] = useState<boolean>(false);\n    const [form] = Form.useForm();\n    const [loading, setLoading] = useState<boolean>(true);\n\n    const history = useHistory();\n    const {id} = useParams();\n    const novo = id === 'novo';\n\n    const getEleicao = (id: string) => {\n        axios.get('/eleicoes/' + id)\n            .then(function ({data}) {\n                form.setFieldsValue({\n                    nome: data.nome,\n                    dataFim: moment(data.dataInicio),\n                    dataInicio: moment(data.dataFim),\n                    cargos: data.cargos.map((c: any) => c.id),\n                })\n                setNome(data.nome);\n                setLoading(false);\n            })\n            .catch(function (error) {\n                console.log(error);\n                setLoading(false);\n            });\n    }\n\n    const getCargos = () => {\n        axios.get('/cargos')\n            .then(function ({data}) {\n                setCargos(data);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    useEffect(() => {\n        getCargos();\n        if (!novo) {\n            getEleicao(id);\n        } else {\n            setLoading(false);\n        }\n    }, []);\n\n    const onSubmit = () => {\n\n        console.log('cargos', form.getFieldValue('cargos'))\n\n        const cargosSubmit: { id: string; }[] = [];\n        form.getFieldValue('cargos').forEach((id: string) => {\n            cargosSubmit.push({\n                id\n            })\n        })\n\n        if (novo) {\n            axios.post('/eleicoes/criar', {\n                nome: form.getFieldValue('nome'),\n                dataInicio: form.getFieldValue('dataInicio'),\n                dataFim: form.getFieldValue('dataFim'),\n                cargos: cargosSubmit,\n            })\n                .then(function ({data}) {\n                    if (data.id) {\n                        setFeedbackSucesso(true);\n                    }\n                })\n                .catch(function (error) {\n                    message.error({content: 'Falha ao criar!', key: 'msg', duration: 2});\n                });\n        } else {\n            message.loading({content: 'Aguarde...', key: 'msg'});\n            axios.put('/eleicoes/editar', {\n                id,\n                nome: form.getFieldValue('nome'),\n                dataInicio: form.getFieldValue('dataInicio'),\n                dataFim: form.getFieldValue('dataFim'),\n                cargos: cargosSubmit,\n            })\n                .then(function ({data}) {\n                    if (data.id) {\n                        message.success({content: 'Alterado!', key: 'msg', duration: 2});\n                        setNome(form.getFieldValue('nome'));\n                    }\n                })\n                .catch(function (error) {\n                    message.error({content: 'Falha ao alterar!', key: 'msg', duration: 2});\n                });\n        }\n    }\n\n    const datasMaioresQueAtual = (current: moment.Moment) => {\n        return current && current.isBefore(moment().subtract(1, \"days\"));\n    }\n\n    const datasMaioresInicial = (current: moment.Moment) => {\n        return current && !current.isAfter(form.getFieldValue('dataInicio'));\n    }\n\n    const reset = () => {\n        setFeedbackSucesso(false);\n        form.setFieldsValue({\n            nome: '',\n            dataFim: null,\n            dataInicio: null,\n        })\n        setNome('');\n    }\n\n    return (\n        <>\n            {loading ? <Loading/> :\n                <ContentPage title={novo ? 'Nova Eleição' : nome}>\n                    {feedbackSucesso ?\n                        <Result\n                            status=\"success\"\n                            title=\"Eleição criada com sucesso!\"\n                            extra={[\n                                <Button type=\"primary\" key=\"console\" onClick={() => history.push(\"/eleicoes\")}>\n                                    Eleições\n                                </Button>,\n                                <Button key=\"buy\" onClick={reset}>Criar nova Eleição</Button>,\n                            ]}\n                        />\n                        :\n                        <Form form={form} {...formItemLayout} onFinish={onSubmit}>\n                            <Form.Item name='nome' label=\"Nome da eleição\"\n                                       rules={[{required: true, message: 'Campo obrigatório!'}]}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name='dataInicio' label=\"Data de início\"\n                                       rules={[{type: 'object', required: true, message: 'Campo obrigatório!'}]}>\n                                <DatePicker format={\"DD/MM/YYYY\"} disabledDate={datasMaioresQueAtual}\n                                />\n                            </Form.Item>\n                            <Form.Item name='dataFim' label=\"Dada de fim\"\n                                       rules={[{type: 'object', required: true, message: 'Campo obrigatório!'}]}>\n                                <DatePicker format={\"DD/MM/YYYY\"} disabledDate={datasMaioresInicial}/>\n                            </Form.Item>\n                            <Form.Item name='cargos' label=\"Cargos\" rules={[{required: true, message: 'Campo obrigatório!'}]}>\n                                <Checkbox.Group>\n                                    {cargos.map(c =>\n                                        <>\n                                            <Checkbox value={c.id} style={{lineHeight: '32px'}}>\n                                                {c.nome}\n                                            </Checkbox>\n                                            <br/>\n                                        </>\n                                    )}\n                                    {!cargos.length && \"Nenhum cargo cadastrado\"}\n                                </Checkbox.Group>\n                            </Form.Item>\n                            <Form.Item wrapperCol={{offset: 4, span: 16}}>\n                                <Button type=\"ghost\" onClick={() => history.goBack()}>\n                                    Cancelar\n                                </Button>\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    {novo ? 'Criar' : 'Alterar'}\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    }\n                </ContentPage>\n            }\n        </>\n    );\n}\nexport default Eleicao;\n","import React, {useEffect, useState} from 'react';\nimport {Avatar, Button, Empty, message, Popconfirm, Spin, Table} from 'antd';\nimport {PlusOutlined, QuestionCircleOutlined, DeleteOutlined, UserOutlined} from '@ant-design/icons';\nimport {useHistory} from \"react-router-dom\";\nimport {ContentPage} from \"../../../shared/components/ContentPage/ContentPage\";\nimport axios from \"axios\";\nimport {Loading} from \"../../../shared/components/Loading/Loading\";\n\nconst Candidatos: React.FC = () => {\n\n    const [candidatos, setCandidatos] = useState<any[]>([]);\n    const [loading, setLoading] = useState<boolean>(true);\n    const history = useHistory();\n\n    const configuracaoColunas = [\n        {\n            title: 'Foto',\n            dataIndex: 'foto',\n            key: 'foto',\n            render: (text: any, item: any) =>  <Avatar size={64} icon={<UserOutlined />} src={\"/candidatos/foto/\" + item.foto.id}/>,\n        },\n        {\n            title: 'Nome',\n            dataIndex: 'nome',\n            key: 'nome',\n            render: (text: any, item: any) => <a onClick={() => history.push(\"/candidato/\" + item.id) }>{text}</a>,\n        },\n        {\n            title: 'Cargo',\n            dataIndex: 'cargo',\n            key: 'cargo',\n            render: (str: string, v: any) => <span>{v?.cargo?.nome}</span>\n        },\n        {\n            key: 'remove',\n            render: (text: string, item: any) => <Popconfirm onConfirm={() => remover(item.id)} title=\"Confirma a remoção？\" icon={<QuestionCircleOutlined style={{color: 'red'}}/>}>\n                <DeleteOutlined style={{color: 'red'}}/>\n            </Popconfirm>\n        },\n    ];\n\n    const getCandidatos = () => {\n        axios.get('/candidatos')\n            .then(function ({data}) {\n                console.log(data);\n                setCandidatos(data);\n                setLoading(false);\n            })\n            .catch(function (error) {\n                setLoading(false);\n            });\n    }\n\n    useEffect(() => {\n        getCandidatos();\n    }, []);\n\n    const remover = (id: string) => {\n        message.loading({content: 'Aguarde...', key: 'msg'});\n        axios.delete('/candidatos/' + id)\n            .then(function ({data}) {\n                message.success({content: 'Removido!', key: 'msg', duration: 2});\n                getCandidatos();\n            })\n            .catch(function (error) {\n                message.error({content: 'Falha ao remover!', key: 'msg', duration: 2});\n            });\n    }\n\n    return (\n        <>\n            {loading ? <Loading /> :\n                <ContentPage title={'Candidatos'}>\n                    <Button style={{marginBottom: 20}} type=\"primary\" icon={<PlusOutlined/>}\n                            onClick={() => history.push(\"/candidato/novo\")}>\n                        Novo candidato\n                    </Button>\n                    {candidatos.length ?\n                        <Table columns={configuracaoColunas} dataSource={candidatos}/>\n                        :\n                        <Empty description={'Nenhum candidato cadastrado'}/>\n                    }\n                </ContentPage>\n            }\n        </>\n    );\n}\nexport default Candidatos;\n","import React, {useEffect, useState} from 'react';\nimport moment from 'moment';\nimport axios from 'axios';\nimport {useHistory, useParams} from \"react-router-dom\";\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport {Button, DatePicker, Form, Input, message, Result, Select, Upload} from 'antd';\nimport {ContentPage} from \"../../../shared/components/ContentPage/ContentPage\";\nimport {Loading} from \"../../../shared/components/Loading/Loading\";\nconst { Option } = Select;\n\nconst formItemLayout = {\n    labelCol: {span: 4},\n    wrapperCol: {span: 6},\n};\n\nconst Candidato: React.FC = () => {\n\n    const [cargos, setCargos] = useState<any[]>([]);\n    const [nome, setNome] = useState<string>('');\n    const [fotoId, setFotoId] = useState<string>('');\n    const [feedbackSucesso, setFeedbackSucesso] = useState<boolean>(false);\n    const [form] = Form.useForm();\n    const [loading, setLoading] = useState<boolean>(true);\n    const [loadingFoto, setLoadingFoto] = useState<boolean>(false);\n\n    const history = useHistory();\n    const {id} = useParams();\n    const novo = id === 'novo';\n\n    const getCandidato = (id: string) => {\n        axios.get('/candidatos/' + id)\n            .then(function ({data}) {\n                form.setFieldsValue({\n                    nome: data.nome,\n                    cargo: data.cargo.id,\n                    foto: data.foto.id,\n                })\n                setFotoId(data.foto.id);\n                setNome(data.nome);\n                setLoading(false);\n            })\n            .catch(function (error) {\n                console.log(error);\n                setLoading(false);\n            });\n    }\n\n    const getCargos = () => {\n        axios.get('/cargos')\n            .then(function ({data}) {\n                setCargos(data);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    useEffect(() => {\n        getCargos();\n        if (!novo) {\n            getCandidato(id);\n        } else {\n            setLoading(false);\n        }\n    }, []);\n\n    const onSubmit = () => {\n        if (novo) {\n            axios.post('/candidatos/criar', {\n                nome: form.getFieldValue('nome'),\n                cargo: {\n                    id: form.getFieldValue('cargo')\n                },\n                foto: {\n                    id: fotoId\n                },\n            })\n                .then(function ({data}) {\n                    if (data.id) {\n                        setFeedbackSucesso(true);\n                    }\n                })\n                .catch(function (error) {\n                    message.error({content: 'Falha ao criar!', key: 'msg', duration: 2});\n                });\n        } else {\n            message.loading({content: 'Aguarde...', key: 'msg'});\n            axios.put('/candidatos/editar', {\n                id,\n                nome: form.getFieldValue('nome'),\n                cargo: {\n                    id: form.getFieldValue('cargo')\n                },\n                foto: {\n                    id: fotoId\n                },\n            })\n                .then(function ({data}) {\n                    if (data.id) {\n                        message.success({content: 'Alterado!', key: 'msg', duration: 2});\n                        setNome(form.getFieldValue('nome'));\n                    }\n                })\n                .catch(function (error) {\n                    message.error({content: 'Falha ao alterar!', key: 'msg', duration: 2});\n                });\n        }\n    }\n\n    const reset = () => {\n        setFeedbackSucesso(false);\n        form.setFieldsValue({\n            nome: '',\n            foto: null,\n            cargo: null,\n        })\n        setNome('');\n        setFotoId('');\n    }\n\n    const uploadButton = (\n        <div>\n            {loadingFoto ? <LoadingOutlined /> : <PlusOutlined />}\n            <div className=\"ant-upload-text\">Upload</div>\n        </div>\n    );\n\n    function beforeUpload(file: any) {\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n        if (!isJpgOrPng) {\n            message.error('You can only upload JPG/PNG file!');\n        }\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n            message.error('Image must smaller than 2MB!');\n        }\n        return isJpgOrPng && isLt2M;\n    }\n\n    const handleChange = (info: any) => {\n        console.log('info', info)\n        if (info.file.status === 'uploading') {\n            setLoadingFoto(true);\n            return;\n        }\n        if (info.file.status === 'done') {\n            setFotoId(info.file.response);\n            setLoadingFoto(false);\n        }\n    };\n\n    return (\n        <>\n            {loading ? <Loading/> :\n                <ContentPage title={novo ? 'Novo Candidato' : nome}>\n                    {feedbackSucesso ?\n                        <Result\n                            status=\"success\"\n                            title=\"Candidato criado com sucesso!\"\n                            extra={[\n                                <Button type=\"primary\" key=\"console\" onClick={() => history.push(\"/candidatos\")}>\n                                    Candidatos\n                                </Button>,\n                                <Button key=\"buy\" onClick={reset}>Criar novo Candidato</Button>,\n                            ]}\n                        />\n                        :\n                        <Form form={form} {...formItemLayout} onFinish={onSubmit}>\n                            <Form.Item name='nome' label=\"Nome\"\n                                       rules={[{required: true, message: 'Campo obrigatório!'}]}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name='cargo' label=\"Cargo\"\n                                       rules={[{required: true, message: 'Campo obrigatório!'}]}>\n                                <Select\n                                    showSearch\n                                    placeholder=\"Selecione o cargo\"\n                                    optionFilterProp=\"children\"\n                                    filterOption={(input: string, option: any) =>\n                                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                    }\n                                >\n                                    {cargos.map(c => <Option value={c.id}>{c.nome}</Option>)}\n                                </Select>\n                            </Form.Item>\n                            <Form.Item name='foto' label=\"Foto\"\n                                       rules={[{required: true, message: 'Campo obrigatório!'}]}>\n                                <Upload\n                                    name=\"foto\"\n                                    listType=\"picture-card\"\n                                    className=\"avatar-uploader\"\n                                    showUploadList={false}\n                                    action=\"/candidatos/salvarFoto\"\n                                    beforeUpload={beforeUpload}\n                                    onChange={handleChange}\n                                >\n                                    {fotoId ? <img src={'/candidatos/foto/' + fotoId} alt=\"foto\"\n                                                   style={{width: '100%'}}/> : uploadButton}\n                                </Upload>\n                            </Form.Item>\n                            <Form.Item wrapperCol={{offset: 4, span: 16}}>\n                                <Button type=\"ghost\" onClick={() => history.goBack()}>\n                                    Cancelar\n                                </Button>\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    {novo ? 'Criar' : 'Alterar'}\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    }\n                </ContentPage>\n            }\n        </>\n    );\n}\nexport default Candidato;\n","import React, {useEffect, useState} from 'react';\nimport moment from 'moment';\nimport axios from 'axios';\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {LoadingOutlined, PlusOutlined} from '@ant-design/icons';\nimport {Button, DatePicker, Form, Input, InputNumber, message, Result, Select, Upload} from 'antd';\nimport {ContentPage} from \"../../shared/components/ContentPage/ContentPage\";\nimport MaskedInput from 'antd-mask-input'\n\n\nconst formItemLayout = {\n    labelCol: {span: 10},\n    wrapperCol: {span: 6},\n};\n\nconst IniciarVotacao: React.FC = () => {\n\n    const [form] = Form.useForm();\n\n    const history = useHistory();\n\n    const onSubmit = () => {\n        message.loading({content: 'Aguarde...', key: 'msg'});\n        axios.post('/eleitores/criar', {\n            cpf: form.getFieldValue('cpf'),\n            nome: form.getFieldValue('nome'),\n        })\n            .then(function ({data}) {\n                if (data.id) {\n                    history.push(\"/selecionarEleicao/\" + form.getFieldValue('cpf'))\n                }\n                message.destroy();\n            })\n            .catch(function (error) {\n                message.error({content: 'Falha ao alterar!', key: 'msg', duration: 2});\n            });\n    }\n\n    return (\n        <>\n            <ContentPage title={''}>\n                <div style={{ fontSize: 20, textAlign: 'center', color: \"gray\", padding: 50 }}>Bem-vindo, entre com os dados para iniciar a votação: </div>\n                <Form form={form} {...formItemLayout} onFinish={onSubmit}>\n                    <Form.Item name='nome' label=\"Nome\"\n                               rules={[{required: true, message: 'Campo obrigatório!'}]}>\n                        <Input/>\n                    </Form.Item>\n                    <Form.Item name='cpf' label=\"CPF\"\n                               trigger={'onBlur'}\n                               validateTrigger={'onBlur'}\n                               rules={[{required: true, message: 'Campo obrigatório!'},\n                                   () => ({\n                                       validator(rule, value) {\n                                           if (value && value.replace(/\\D/g, '').length !== 11) {\n                                               return Promise.reject('CPF inválido!');\n                                           }\n                                           return Promise.resolve();\n                                       },\n                                   }),\n                               ]}>\n                        <MaskedInput mask=\"111.111.111-11\"/>\n                    </Form.Item>\n                    <Form.Item wrapperCol={{offset: 10, span: 16}}>\n                        <Button type=\"primary\" htmlType=\"submit\" size={\"large\"}>\n                            Iniciar votação\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </ContentPage>\n        </>\n    );\n}\nexport default IniciarVotacao;\n","import React, {useEffect, useState} from 'react';\nimport {Avatar, Button, Empty, message, Popconfirm, Spin, Table} from 'antd';\nimport {PlusOutlined, QuestionCircleOutlined, DeleteOutlined, UserOutlined} from '@ant-design/icons';\nimport {useHistory} from \"react-router-dom\";\nimport {ContentPage} from \"../../../shared/components/ContentPage/ContentPage\";\nimport axios from \"axios\";\nimport {Loading} from \"../../../shared/components/Loading/Loading\";\n\nconst Cargos: React.FC = () => {\n\n    const [cargos, setCargos] = useState<any[]>([]);\n    const [loading, setLoading] = useState<boolean>(true);\n    const history = useHistory();\n\n    const configuracaoColunas = [\n        {\n            title: 'Nome',\n            dataIndex: 'nome',\n            key: 'nome',\n            render: (text: any, item: any) => <a onClick={() => history.push(\"/cargo/\" + item.id) }>{text}</a>,\n        },\n        {\n            key: 'remove',\n            render: (text: string, item: any) => <Popconfirm onConfirm={() => remover(item.id)} title=\"Confirma a remoção？\" icon={<QuestionCircleOutlined style={{color: 'red'}}/>}>\n                <DeleteOutlined style={{color: 'red'}}/>\n            </Popconfirm>\n        },\n    ];\n\n    const getCargos = () => {\n        axios.get('/cargos')\n            .then(function ({data}) {\n                console.log(data);\n                setCargos(data);\n                setLoading(false);\n            })\n            .catch(function (error) {\n                setLoading(false);\n            });\n    }\n\n    useEffect(() => {\n        getCargos();\n    }, []);\n\n    const remover = (id: string) => {\n        message.loading({content: 'Aguarde...', key: 'msg'});\n        axios.delete('/cargos/' + id)\n            .then(function ({data}) {\n                message.success({content: 'Removido!', key: 'msg', duration: 2});\n                getCargos();\n            })\n            .catch(function (error) {\n                message.error({content: 'Falha ao remover!', key: 'msg', duration: 2});\n            });\n    }\n\n    return (\n        <>\n            {loading ? <Loading /> :\n                <ContentPage title={'Cargos'}>\n                    <Button style={{marginBottom: 20}} type=\"primary\" icon={<PlusOutlined/>}\n                            onClick={() => history.push(\"/cargo/novo\")}>\n                        Novo cargo\n                    </Button>\n                    {cargos.length ?\n                        <Table columns={configuracaoColunas} dataSource={cargos}/>\n                        :\n                        <Empty description={'Nenhum cargo cadastrado'}/>\n                    }\n                </ContentPage>\n            }\n        </>\n    );\n}\nexport default Cargos;\n","import React, {useEffect, useState} from 'react';\nimport moment from 'moment';\nimport axios from 'axios';\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {LoadingOutlined, CheckOutlined} from '@ant-design/icons';\nimport {\n    Avatar,\n    Button,\n    Col,\n    DatePicker,\n    Form,\n    Input,\n    InputNumber,\n    message,\n    Result,\n    Row,\n    Select, Space,\n    Tag,\n    Upload\n} from 'antd';\nimport {ContentPage} from \"../../shared/components/ContentPage/ContentPage\";\nimport {Loading} from \"../../shared/components/Loading/Loading\";\nimport MaskedInput from 'antd-mask-input'\nimport {List, Card, Radio, Typography} from 'antd';\nconst { Text,Title } = Typography;\n\nconst formItemLayout = {\n    labelCol: {span: 4},\n    wrapperCol: {span: 6},\n};\n\nconst SelecionarEleicao: React.FC = () => {\n\n    const [eleicaoSelecionada, setEleicaoSelecionada] = useState<any>(null);\n    const [eleicoes, setEleicoes] = useState<any[]>([]);\n    const [feedbackSucesso, setFeedbackSucesso] = useState<boolean>(false);\n    const [form] = Form.useForm();\n    const [loading, setLoading] = useState<boolean>(true);\n    const [candidatoSelecionado, setCandidatoSelecionado] = useState<any>({});\n    const [protocolo, setProtocolo] = useState<string>('');\n\n    const history = useHistory();\n    const {cpf} = useParams();\n\n    const getEleicoes = () => {\n        axios.get('/eleicoes/disponiveis/' + cpf)\n            .then(function ({data}) {\n                console.log(data)\n                setEleicoes(data);\n                setLoading(false);\n            })\n            .catch(function (error) {\n                message.error({content: 'Falha ao criar!', key: 'msg', duration: 2});\n                setLoading(false);\n            });\n    }\n\n    useEffect(() => {\n        getEleicoes();\n    }, []);\n\n    const selecionaEleicao = (eleicao: any) => {\n        console.log('selecionaEleicao', eleicao)\n        setEleicaoSelecionada(eleicao);\n    }\n\n    const radioStyle = {\n        display: 'block',\n        height: '30px',\n        lineHeight: '30px',\n    };\n\n    const selecionaCandidato = (cargoId: number, candidatoId: number) => {\n        setCandidatoSelecionado({...candidatoSelecionado, [cargoId] : candidatoId});\n        console.log('selecionaCandidato', cargoId, candidatoId, candidatoSelecionado)\n    };\n\n    const finalizarVotacao = () => {\n        message.loading({content: 'Aguarde...', key: 'msg'});\n        axios.post('/eleicoes/votar', {\n            cpf,\n            eleicaoId: eleicaoSelecionada.eleicao.id,\n            votados: candidatoSelecionado,\n        })\n            .then(function ({data}) {\n                if (data) {\n                    setProtocolo(data);\n                    setFeedbackSucesso(true);\n                }\n                message.destroy();\n            })\n            .catch(function (error) {\n                message.error({content: 'Falha ao alterar!', key: 'msg', duration: 2});\n            });\n    };\n\n    const reset = () => {\n        setLoading(true);\n        getEleicoes();\n        setFeedbackSucesso(false);\n        setCandidatoSelecionado(null);\n        setProtocolo('');\n        setEleicaoSelecionada(null);\n    }\n\n    return (\n        <>\n            {loading ? <Loading/> :\n                <ContentPage title={'Eleições'}>\n                    {feedbackSucesso ?\n                        <Result\n                            status=\"success\"\n                            title=\"Votação concluída com sucesso!\"\n                            subTitle={<span>Seu número de protocolo é <b>{protocolo}</b></span>}\n                            extra={[\n                                <Button type=\"primary\" key=\"console\" onClick={reset}>\n                                    Votar novamente\n                                </Button>,\n                            ]}\n                        />\n                        : (eleicaoSelecionada ?\n                                <Space direction=\"vertical\">\n                                    <div style={{ border: '1px solid lightgray', backgroundColor: 'white', borderRadius: 5, padding: 10 }}>\n                                       Eleitor: <b>{cpf}</b>\n                                    </div>\n                                    {eleicaoSelecionada.cargos.map((cargo: any) =>\n                                        <Card type=\"inner\" title={cargo.nome}>\n                                            <List\n                                                dataSource={cargo?.candidatos}\n                                                itemLayout=\"vertical\"\n                                                renderItem={(candidato: any) => (\n                                                    <List.Item className=\"listItem\"\n                                                               onClick={() => selecionaCandidato(cargo.id, candidato.id)}>\n                                                        <Row justify=\"space-between\" align=\"middle\">\n                                                            <Col>\n                                                                <Avatar size={64}\n                                                                        src={\"/candidatos/foto/\" + candidato.foto.id}/>\n                                                                <Text style={{marginLeft: 20}}>{candidato.nome}</Text>\n                                                            </Col>\n                                                            <Col>\n                                                                {candidato.id === candidatoSelecionado[cargo.id] &&\n                                                                <Tag color=\"green\">ESCOLHIDO</Tag>}\n                                                            </Col>\n                                                        </Row>\n                                                    </List.Item>\n                                                )}\n                                            />\n                                        </Card>\n                                    )}\n                                    <Row>\n                                        <Button size={\"large\"} onClick={() => history.push(\"/\")}>Cancelar</Button>\n                                        <Button size={\"large\"} style={{marginBottom: 20}} type=\"primary\" icon={<CheckOutlined />}\n                                                onClick={finalizarVotacao}>\n                                           Finalizar Votação\n                                        </Button>\n                                    </Row>\n                                </Space>\n                                :\n                                <List\n                                    grid={{gutter: 16, column: 3}}\n                                    dataSource={eleicoes}\n                                    renderItem={e => (\n                                        <List.Item>\n                                            <Card title={e.eleicao.nome}>\n                                                {\n                                                    e.protocolo ?\n                                                        <Row justify=\"space-between\" align=\"middle\" style={{ minHeight: 40 }}>\n                                                            <span>Protocolo: <b>{e.protocolo.numero}</b></span>\n                                                            <Tag color=\"green\">VOTADO</Tag>\n                                                        </Row>\n                                                        :\n                                                        <Row justify=\"space-between\" align=\"middle\" style={{ minHeight: 40 }}>\n                                                            <span>Disponível até <b>{moment(e.eleicao.dataInicio).format('DD/MM/YYYY')}</b></span>\n                                                            <Button type={\"primary\"}\n                                                                    onClick={(ev) => selecionaEleicao(e)}> VOTAR</Button>\n                                                        </Row>\n                                                }\n                                            </Card>\n                                        </List.Item>\n                                    )}>\n                                </List>\n                        )}\n                </ContentPage>\n            }\n        </>\n    );\n}\nexport default SelecionarEleicao;\n","import React, {useEffect, useState} from 'react';\nimport moment from 'moment';\nimport {Button, Empty, message, Popconfirm, Row, Table, Tag} from 'antd';\nimport {useHistory} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {ContentPage} from \"../../shared/components/ContentPage/ContentPage\";\nimport {Loading} from \"../../shared/components/Loading/Loading\";\n\nconst Relatorios: React.FC = () => {\n\n    const [eleicoes, setEleicoes] = useState<any[]>([]);\n    const history = useHistory();\n    const [loading, setLoading] = useState<boolean>(true);\n\n    const configuracaoColunas = [\n        {\n            title: 'Eleição',\n            dataIndex: 'nome',\n            key: 'nome',\n        },\n        {\n            title: 'Dada de Início',\n            dataIndex: 'dataInicio',\n            key: 'dataInicio',\n            render: (v: any) => moment(v).format('DD/MM/YYYY')\n        },\n        {\n            title: 'Data de término',\n            dataIndex: 'dataFim',\n            key: 'dataFim',\n            render: (v: any) => moment(v).format('DD/MM/YYYY')\n        },\n        {\n            title: 'Situação',\n            dataIndex: 'situacao',\n            key: 'situacao',\n            render: (v: any) => Situacao(v)\n        },\n        {\n            key: 'remove',\n            dataIndex: 'situacao',\n            render: (v: any, item: any) =>  BotaoRelatorio(v, item)\n        },\n    ];\n\n    const getEleicoes = () => {\n        axios.get('/eleicoes')\n            .then(function ({data}) {\n                console.log(data);\n                setEleicoes(data);\n                setLoading(false);\n            })\n            .catch(function (error) {\n                console.log(error);\n                setLoading(false);\n            });\n    }\n\n    useEffect(() => {\n        getEleicoes();\n    }, []);\n\n    const remover = (id: string) => {\n        message.loading({content: 'Aguarde...', key: 'msg'});\n        axios.delete('/eleicoes/' + id)\n            .then(function ({data}) {\n                message.success({content: 'Removido!', key: 'msg', duration: 2});\n                getEleicoes();\n            })\n            .catch(function (error) {\n                message.error({content: 'Falha ao remover!', key: 'msg', duration: 2});\n            });\n    }\n\n    const BotaoRelatorio = (situacao: string, eleicao: any) => {\n        if (situacao === 'EM_ANDAMENTO') {\n            return <Button type=\"default\" onClick={() => history.push(\"/relatorio/\" + eleicao.id)} style={{ width: 100 }}>\n                Relatório\n            </Button>\n        }\n        if (situacao === 'FINALIZADA') {\n            return <Button type=\"primary\" onClick={() => history.push(\"/relatorio/\" + eleicao.id)} style={{ width: 100 }}>\n                Relatório\n            </Button>\n        }\n        return <></>;\n    }\n\n    const Situacao = (situacao: string) => {\n        if (situacao === 'EM_ANDAMENTO') {\n            return <Tag color=\"gold\">EM ANDAMENTO</Tag>;\n        }\n        if (situacao === 'INDISPONIVEL') {\n            return <Tag color=\"magenta\">INDISPONÍVEL</Tag>;\n        }\n        return <Tag color=\"green\">FINALIZADA</Tag>;\n    }\n\n    return (\n        <>\n            {loading ? <Loading/> :\n                <ContentPage title={'Eleições'}>\n                    {eleicoes.length ?\n                        <Table columns={configuracaoColunas} dataSource={eleicoes}/>\n                        :\n                        <Empty description={'Nenhuma eleição cadastrada'}/>\n                    }\n                </ContentPage>\n            }\n        </>\n    );\n}\nexport default Relatorios;\n","import React, {useEffect, useState} from 'react';\nimport {Button, Empty, Row, Statistic, Table, Tag, Col } from 'antd';\nimport {useHistory, useParams} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {ContentPage} from \"../../shared/components/ContentPage/ContentPage\";\nimport {Loading} from \"../../shared/components/Loading/Loading\";\nimport Text from \"antd/lib/typography/Text\";\n\nconst Relatorio: React.FC = () => {\n\n    const [votacao, setVotacao] = useState<any[]>([]);\n    const [situacao, setSituacao] = useState<string>('');\n    const [qtdEleitores, setQtdEleitores] = useState<number>(0);\n    const history = useHistory();\n    const [loading, setLoading] = useState<boolean>(true);\n    const {id} = useParams();\n\n    const getRelatorio = () => {\n        axios.get(`/eleicoes/${id}/relatorio`)\n            .then(function ({data}) {\n                console.log(data);\n                setQtdEleitores(data.quantidadeEleitores);\n                setSituacao(data.situacao);\n                agruparPeloCargo(data.votacao);\n                setLoading(false);\n            })\n            .catch(function (error) {\n                console.log(error);\n                setLoading(false);\n            });\n    }\n\n    useEffect(() => {\n        getRelatorio();\n    }, []);\n\n    const agruparPeloCargo = (votacao: any[]) => {\n        const listaVotos: any = {};\n        votacao.forEach(v => {\n            !listaVotos[v.cargoId] && (listaVotos[v.cargoId] = []);\n            listaVotos[v.cargoId].push(v);\n        })\n        setVotacao(Object.values(listaVotos))\n    };\n\n    const configuracaoColunas = [\n        {\n            title: 'Candidato',\n            dataIndex: 'candidatoNome',\n            key: 'candidato',\n        },\n        {\n            title: 'Votos',\n            dataIndex: 'quantidadeVotos',\n            key: 'quantidadeVotos',\n            width: 100,\n            render: (v: any) => <Text style={{ fontWeight: \"bold\" }}>{v}</Text>\n        },\n    ];\n\n    const Situacao = (situacao: string) => {\n        if (situacao === 'EM_ANDAMENTO') {\n            return <Tag color=\"gold\">EM ANDAMENTO</Tag>;\n        }\n        if (situacao === 'INDISPONIVEL') {\n            return <Tag color=\"magenta\">INDISPONÍVEL</Tag>;\n        }\n        return <Tag color=\"green\">FINALIZADA</Tag>;\n    }\n\n    return (\n        <>\n            {loading ? <Loading/> :\n                <ContentPage title={'Eleições'}>\n                    <Row gutter={16}>\n                        <Col>\n                            <Statistic title=\"Quatidade de eleitores\" value={qtdEleitores} style={{ backgroundColor: 'white', padding: 20, borderRadius: 10 }}/>\n                        </Col>\n                        <Col>\n                            {Situacao(situacao)}\n                        </Col>\n                    </Row>\n                    {votacao.map(votos =>\n                        <>\n                            <div style={{ marginTop: 30, fontWeight: 'bold', fontSize: 16 }}>{votos[0].cargoNome}</div>\n                            <Table columns={configuracaoColunas} dataSource={votos} style={{ marginTop: 20 }} showHeader={false} pagination={false}/>\n                        </>\n                    )}\n                    {!votacao.length && <Empty/>}\n                </ContentPage>\n            }\n        </>\n    );\n}\nexport default Relatorio;\n","import React, {Component} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useRouteMatch,\n    useParams,\n    Redirect\n} from \"react-router-dom\";\nimport Eleicoes from \"./pages/cadastros/eleicao/Eleicoes\";\nimport Cargo from \"./pages/cadastros/cargo/Cargo\";\nimport locale from 'antd/es/locale/pt_BR';\nimport {ConfigProvider, Layout, Menu} from 'antd';\nimport Eleicao from \"./pages/cadastros/eleicao/Eleicao\";\nimport Candidatos from \"./pages/cadastros/candidato/Candidatos\";\nimport Candidato from \"./pages/cadastros/candidato/Candidato\";\nimport IniciarVotacao from \"./pages/votar/IniciarVotacao\";\nimport Cargos from \"./pages/cadastros/cargo/Cargos\";\nimport SelecionarEleicao from \"./pages/votar/SelecionarEleicao\";\nimport Relatorios from \"./pages/relatorios/Relatorios\";\nimport Relatorio from \"./pages/relatorios/Relatorio\";\n\nconst {Header, Content, Footer, Sider} = Layout;\nconst {SubMenu} = Menu;\n\nconst App: React.FC = () => {\n    return (\n        <ConfigProvider locale={locale}>\n            <Router>\n                <Layout>\n                    <Sider\n                        style={{\n                            overflow: 'auto',\n                            height: '100vh',\n                            position: 'fixed',\n                            left: 0,\n                        }}\n                    >\n                        <div className=\"logo\"/>\n                        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['votar']}>\n                            <Menu.Item key=\"votar\">\n                                <Link to=\"/votar\">VOTAR</Link>\n                            </Menu.Item>\n                            <SubMenu key=\"eleicoes\" title=\"Cadastros\">\n                                <Menu.Item key=\"eleicao\"><Link to=\"/eleicoes\">Eleições</Link></Menu.Item>\n                                <Menu.Item key=\"cargo\"><Link to=\"/cargos\">Cargos</Link></Menu.Item>\n                                <Menu.Item key=\"candidato\"><Link to=\"/candidatos\">Cadidatos</Link></Menu.Item>\n                            </SubMenu>\n                            <Menu.Item key=\"relatorios\">\n                                <Link to=\"/relatorios\">Relatórios</Link>\n                            </Menu.Item>\n                        </Menu>\n                    </Sider>\n                    <Layout className=\"site-layout\" style={{marginLeft: 200}}>\n                        <Redirect from=\"/\" to=\"votar\" />\n                        <Switch>\n                            <Route path=\"/votar\">\n                                <IniciarVotacao/>\n                            </Route>\n                            <Route path=\"/selecionarEleicao/:cpf\" children={<SelecionarEleicao/>}/>\n                            <Route path=\"/eleicoes\">\n                                <Eleicoes/>\n                            </Route>\n                            <Route path=\"/eleicao/:id\" children={<Eleicao/>}/>\n                            <Route path=\"/cargos\">\n                                <Cargos/>\n                            </Route>\n                            <Route path=\"/cargo/:id\" children={<Cargo/>}/>\n                            <Route path=\"/candidatos\">\n                                <Candidatos/>\n                            </Route>\n                            <Route path=\"/candidato/:id\" children={<Candidato/>}/>\n                            <Route path=\"/relatorios\">\n                                <Relatorios/>\n                            </Route>\n                            <Route path=\"/relatorio/:id\" children={<Relatorio/>}/>\n                        </Switch>\n                    </Layout>\n                </Layout>\n            </Router>\n        </ConfigProvider>\n    );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}